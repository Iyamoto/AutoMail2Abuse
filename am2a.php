<?php
//Auto Mail to Abuse (am2a)
//Send messages to ISP's abuse emails(taken from whois)

date_default_timezone_set('UTC');

//IP -> whois -> abuse email
function FindEmail($ip){
	if(defined("DEBUG_EMAIL")) $email = DEBUG_EMAIL;
	else {
		$rez = shell_exec('whois '.$ip);//Should I find a php whois? probably not.
		if($rez) $email = Str2Email($rez);
		else {
			echo "[-]Whois error\n";
			$email = false;
		}	
	}
	return $email;
}

//Which is best way to find right email from whois data?
function Str2Email($str){
	$r = preg_match_all('|\s(\S+@\S+)\s|',$str,$m);
	if($r){
		$emails = array_unique($m[1]);
		//if only one email return it
		if(sizeof($emails) == 1) return $emails[0];
		else {
			//if more then one?
			//looking for abuse
			//next? feel lucky? :)
			asort($emails);
			foreach($emails as $email){
				$pos = strpos($email, "abuse");
				if ($pos !== false) return $email;
			}
			return $emails[0];
		}
	} else return false;
}

function SendAbuse($email, $ip, $evidence, $domain){
	$subject = "Reporting hack attempt from $ip";
	if(defined("SERVER_IP")) $myip = SERVER_IP;
	else $myip = $_SERVER['SERVER_ADDR'];
	$myemail = 'someone@gmail.com';
	$body = "Greetings!
We are reporting a hack attempt from host $ip to our web server $myip(domain $domain).
Here is a web server log:
$evidence
	
Please take appropriate action with regard to this matter.
Contact us at $myemail
---
This email was generated by am2a software (https://github.com/Iyamoto/AutoMail2Abuse)";
$headers = 'From: root'."\r\n" .
    'Reply-To: '.$myemail."\r\n" .
    'X-Mailer: PHP/' . phpversion();
	var_dump($ip,$email);
	/*
	$rez = mail($email, $subject, $body,$headers);
	if($rez) echo "[+] Email to $email sent successfully\n";
	else var_dump($rez);*/
}

//Get time, url, ip etc
function GetEvidence(){
	$host = htmlentities($_GET['host'], ENT_QUOTES, 'UTF-8');
	$uri = htmlentities($_GET['uri'], ENT_QUOTES, 'UTF-8');
	$q = htmlentities($_GET['q'], ENT_QUOTES, 'UTF-8');
	$url = 'http://'.$host.''.$uri.'?'.$q;
	$ip = htmlentities($_GET['ip'], ENT_QUOTES, 'UTF-8');
	$date = date("Y-m-d H:i:s");
	$evidence = $date.' UTC: '.$ip.'=>'.$url;
	return $evidence;
}

function EchoBanner($str='Stop!'){
	echo $str;
}

function ParseApache($path){
	$needles = array('etc/passwd1','proc/self/environ');
	foreach($needles as $needle){
		$rez = shell_exec('grep -R '.$needle.' '.$path);
		if(strlen($rez)>0){
			$lines = text2lines($rez);
			foreach($lines as $line){
				if(strlen($line)>0){
					$ip = getLogIP($line);
					if($ip){
						$domain = getLogDomain($line,$path);
						if($domain){
							$data[$ip][$domain][] = getLogLine($line);
						}	
					}
				}
			}
		} else echo "[-] $needle not found\n";	
	}	
	return $data;
}

function text2lines($text){
	$lines = explode("\r\n",$text);
	if (sizeof($lines)==1) $lines = explode("\n",$text);
	return $lines;
}

function getLogIP($line){
	$r = preg_match('|(\d+\.\d+\.\d+\.\d+)\s|',$line,$m);
	if($r){
		return $m[1];
	} else return false;
}

function getLogDomain($line,$path){
	$r = preg_match('|'.$path.'(.*)\.access.log|',$line,$m);
	if($r){
		return $m[1];
	} else return false;
}

function getLogDate($line){
	$date = $line;
	return $date;
}

function getLogUrl($line){
	$url = $line;
	return $url;
}

function getLogLine($line){
	$log = preg_replace('|^[^:]+:|','',$line);
	return $log;
}

?>
